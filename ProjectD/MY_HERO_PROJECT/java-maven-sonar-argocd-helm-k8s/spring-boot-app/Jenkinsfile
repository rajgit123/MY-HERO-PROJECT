pipeline {
    agent {
        docker {
            image 'abhishekf5/maven-abhishek-docker-agent:v1'
            args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // mount Docker socket to access the host's Docker daemon
        }
    }
    stages {
        stage('Build and Test') {
            steps {
                // Perform build steps here
                sh 'cd ProjecrD/MY_HERO_PROJECT/java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'
            }
        }
        
       /* stage('Static code analysis') {
            steps {
                environment {
                    SONAR_URL = "http://34.201.116.83:9000"
                }
            }
            steps {
                withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
                    sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
                }
             
            }
        }
        
        stage('Deploy') {
            steps {
                // Perform deployment steps here
                sh 'echo ok'
            }
        } */
    }
    
    
}
